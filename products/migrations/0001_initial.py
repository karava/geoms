# Generated by Django 3.2.9 on 2023-09-09 03:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Drainage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('material', models.CharField(blank=True, max_length=200, null=True)),
                ('short_description', models.TextField(blank=True, help_text='This is a short concise and useful description of the product', null=True)),
                ('long_description', models.TextField(blank=True, help_text='This is for SEO purposes', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('suppliers', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('twentygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortyhc_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('moq', models.IntegerField(blank=True, default=0, null=True)),
                ('alternative_names', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('packing_description', models.CharField(blank=True, max_length=200, null=True)),
                ('sub_categories', models.JSONField()),
                ('type', models.CharField(choices=[('strip', 'Strip Drain'), ('sheet', 'Sheet Drain')], default='strip', help_text='FreDrain = Strip Drain, TerraDrain = Sheet Drain', max_length=200)),
                ('height', models.IntegerField(help_text='Unit of measure is mm')),
                ('roll_width', models.IntegerField(help_text='Unit of measure is mm')),
                ('double_cuspated', models.BooleanField(default=False)),
                ('applications', models.ManyToManyField(related_name='drainage_products', to='products.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GCL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('material', models.CharField(blank=True, max_length=200, null=True)),
                ('short_description', models.TextField(blank=True, help_text='This is a short concise and useful description of the product', null=True)),
                ('long_description', models.TextField(blank=True, help_text='This is for SEO purposes', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('suppliers', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('twentygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortyhc_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('moq', models.IntegerField(blank=True, default=0, null=True)),
                ('alternative_names', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('packing_description', models.CharField(blank=True, max_length=200, null=True)),
                ('sub_categories', models.JSONField()),
                ('density', models.IntegerField(help_text='Unit of measure is gsm')),
                ('roll_width', models.DecimalField(decimal_places=2, help_text='Unit of measure is m', max_digits=4)),
                ('roll_length', models.DecimalField(decimal_places=2, help_text='Unit of measure is m', max_digits=5)),
                ('bentonite_specs', models.CharField(blank=True, max_length=200, null=True)),
                ('applications', models.ManyToManyField(related_name='gcl_products', to='products.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('material', models.CharField(blank=True, max_length=200, null=True)),
                ('short_description', models.TextField(blank=True, help_text='This is a short concise and useful description of the product', null=True)),
                ('long_description', models.TextField(blank=True, help_text='This is for SEO purposes', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('suppliers', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('twentygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortyhc_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('moq', models.IntegerField(blank=True, default=0, null=True)),
                ('alternative_names', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('packing_description', models.CharField(blank=True, max_length=200, null=True)),
                ('sub_categories', models.JSONField()),
                ('height', models.IntegerField(help_text='Unit of measure is mm')),
                ('weld_spacing', models.IntegerField(help_text='Unit of measure is mm')),
                ('is_textured', models.BooleanField(default=False)),
                ('applications', models.ManyToManyField(related_name='geo_cell_products', to='products.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoGrid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('material', models.CharField(blank=True, max_length=200, null=True)),
                ('short_description', models.TextField(blank=True, help_text='This is a short concise and useful description of the product', null=True)),
                ('long_description', models.TextField(blank=True, help_text='This is for SEO purposes', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('suppliers', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('twentygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortyhc_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('moq', models.IntegerField(blank=True, default=0, null=True)),
                ('alternative_names', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('packing_description', models.CharField(blank=True, max_length=200, null=True)),
                ('sub_categories', models.JSONField()),
                ('shape', models.CharField(choices=[('BI', 'BIAXIAL'), ('TRI', 'TRIAXIAL')], max_length=200)),
                ('strength_md', models.IntegerField(help_text='Strength in machine direction in kN')),
                ('strength_td', models.IntegerField(help_text='Strength in transverse direction in kN')),
                ('applications', models.ManyToManyField(related_name='geo_grid_products', to='products.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoTextile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('material', models.CharField(blank=True, max_length=200, null=True)),
                ('short_description', models.TextField(blank=True, help_text='This is a short concise and useful description of the product', null=True)),
                ('long_description', models.TextField(blank=True, help_text='This is for SEO purposes', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('suppliers', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('twentygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortygp_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('fortyhc_cap', models.IntegerField(blank=True, default=0, null=True)),
                ('moq', models.IntegerField(blank=True, default=0, null=True)),
                ('alternative_names', models.CharField(blank=True, help_text='Please comma separate names', max_length=200, null=True)),
                ('packing_description', models.CharField(blank=True, max_length=200, null=True)),
                ('sub_categories', models.JSONField()),
                ('density', models.IntegerField(help_text='Unit of measure is gsm')),
                ('roll_width', models.DecimalField(decimal_places=2, help_text='Unit of measure is m', max_digits=4)),
                ('roll_length', models.DecimalField(decimal_places=2, help_text='Unit of measure is m', max_digits=5)),
                ('type', models.CharField(choices=[('woven', 'Woven'), ('nonwoven', 'Non-woven')], default='woven', max_length=200)),
                ('applications', models.ManyToManyField(related_name='geo_textile_products', to='products.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoTextileResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('datasheet', 'Datasheet'), ('brochure', 'Brochure'), ('installation_guide', 'Installation Guide'), ('accessory_guide', 'Accessory Guide'), ('test_report', 'Test Report')], max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(max_length=255, upload_to='products/geo_textile/resources/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='products.geotextile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoTextilePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sale', 'Sale'), ('cost', 'Cost'), ('rrp', 'RRP')], default='sale', max_length=200)),
                ('date', models.DateField()),
                ('qty', models.IntegerField()),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('incoterm', models.CharField(choices=[('fob', 'FOB'), ('cif', 'CIF'), ('ddp', 'DDP')], default='cif', max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('aud', 'AUD')], default='usd', max_length=200)),
                ('expiry', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='products.geotextile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoTextileImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=True)),
                ('image', models.ImageField(max_length=255, upload_to='products/geo_textile/images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.geotextile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoGridResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('datasheet', 'Datasheet'), ('brochure', 'Brochure'), ('installation_guide', 'Installation Guide'), ('accessory_guide', 'Accessory Guide'), ('test_report', 'Test Report')], max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(max_length=255, upload_to='products/geo_grid/resources/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='products.geogrid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoGridPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sale', 'Sale'), ('cost', 'Cost'), ('rrp', 'RRP')], default='sale', max_length=200)),
                ('date', models.DateField()),
                ('qty', models.IntegerField()),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('incoterm', models.CharField(choices=[('fob', 'FOB'), ('cif', 'CIF'), ('ddp', 'DDP')], default='cif', max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('aud', 'AUD')], default='usd', max_length=200)),
                ('expiry', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='products.geogrid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoGridImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=True)),
                ('image', models.ImageField(max_length=255, upload_to='products/geo_grid/images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.geogrid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoCellResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('datasheet', 'Datasheet'), ('brochure', 'Brochure'), ('installation_guide', 'Installation Guide'), ('accessory_guide', 'Accessory Guide'), ('test_report', 'Test Report')], max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(max_length=255, upload_to='products/geo_cell/resources/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='products.geocell')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoCellPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sale', 'Sale'), ('cost', 'Cost'), ('rrp', 'RRP')], default='sale', max_length=200)),
                ('date', models.DateField()),
                ('qty', models.IntegerField()),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('incoterm', models.CharField(choices=[('fob', 'FOB'), ('cif', 'CIF'), ('ddp', 'DDP')], default='cif', max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('aud', 'AUD')], default='usd', max_length=200)),
                ('expiry', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='products.geocell')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoCellImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=True)),
                ('image', models.ImageField(max_length=255, upload_to='products/geo_cell/images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.geocell')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GCLResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('datasheet', 'Datasheet'), ('brochure', 'Brochure'), ('installation_guide', 'Installation Guide'), ('accessory_guide', 'Accessory Guide'), ('test_report', 'Test Report')], max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(max_length=255, upload_to='products/gcl/resources/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='products.gcl')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GCLPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sale', 'Sale'), ('cost', 'Cost'), ('rrp', 'RRP')], default='sale', max_length=200)),
                ('date', models.DateField()),
                ('qty', models.IntegerField()),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('incoterm', models.CharField(choices=[('fob', 'FOB'), ('cif', 'CIF'), ('ddp', 'DDP')], default='cif', max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('aud', 'AUD')], default='usd', max_length=200)),
                ('expiry', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='products.gcl')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GCLImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=True)),
                ('image', models.ImageField(max_length=255, upload_to='products/gcl/images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.gcl')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DrainageResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('datasheet', 'Datasheet'), ('brochure', 'Brochure'), ('installation_guide', 'Installation Guide'), ('accessory_guide', 'Accessory Guide'), ('test_report', 'Test Report')], max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(max_length=255, upload_to='products/drainage/resources/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='products.drainage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DrainagePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sale', 'Sale'), ('cost', 'Cost'), ('rrp', 'RRP')], default='sale', max_length=200)),
                ('date', models.DateField()),
                ('qty', models.IntegerField()),
                ('unit_of_measure', models.CharField(choices=[('rolls', 'Rolls'), ('sqm', 'SQM')], default='rolls', max_length=200)),
                ('incoterm', models.CharField(choices=[('fob', 'FOB'), ('cif', 'CIF'), ('ddp', 'DDP')], default='cif', max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('aud', 'AUD')], default='usd', max_length=200)),
                ('expiry', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='products.drainage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DrainageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=True)),
                ('image', models.ImageField(max_length=255, upload_to='products/drainage/images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.drainage')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
